{
  "contractName": "MushroomswapFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MushroomswapFactory.sol\":\"MushroomswapFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/MushroomswapERC20.sol\":{\"keccak256\":\"0x4ec8a3b4c14379d7dce2cb271216df3aaf4fba992da1fb6a3afadefb99e75a1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3674a5c85d8d5e4e93dbf82b8e392af46316fa678ca2a4925e2cb48a3042de06\",\"dweb:/ipfs/QmeFwkBZ8m9emEdxBg652QcBqdHkFQiUaqTe8EJp4XS3FD\"]},\"project:/contracts/MushroomswapFactory.sol\":{\"keccak256\":\"0x82755b695461de4f79e41bb2cf577d544c67bb22544c0c21024f2d4805b96a0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed2381e6a326129c3d56c6499563e3657dcc0b845a0e28d00654615b30c94f1\",\"dweb:/ipfs/QmUkWYuhxTbNzz4Yjpz7Lwhj7AedNHmvdhu3ERY43ak91j\"]},\"project:/contracts/MushroomswapPair.sol\":{\"keccak256\":\"0xe3e9bba07a0db56bc33a3996be1ac129f2dc44f50684b3c2e17de7b1d7e9a7b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70fb26cc99e03740b09a1dda4063ee258e6b1874efef6f84ae05ac88857744ba\",\"dweb:/ipfs/QmR3ZcQwUYuhjbjvLq3kc5nCrHjoK6F5wjWqtSdzozBo1h\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x4329afd047104d8ecfe383f504b5ff457664970bd9819dc8bf84d9d3df778e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc8876d62e7f4c51fea30d4bfb5eecce5e9a32e5087b15ce218be2cfcf779127\",\"dweb:/ipfs/QmbTQLPJikqEApocpcikcySQmjp7py2WVfqFgP7WaNGumZ\"]},\"project:/contracts/interfaces/IMushroomswapCallee.sol\":{\"keccak256\":\"0xd30739aea5261a9948f5367b8469609a6d669144231ece4c059ca3d0c2ed3f14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fc1a4d2b762b0372e16436aeb67b1ed1aae7208ddee05de1ec1864b28a76086\",\"dweb:/ipfs/QmX5ArbNje3LsNNnozmjBknYrkAFpwFjEpfNrifMTz831P\"]},\"project:/contracts/interfaces/IMushroomswapERC20.sol\":{\"keccak256\":\"0xe1e21285cf0f0b53496fbae11b9c1ec398ba29b5d673ce1d2e3d9737f807fd7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48c2acaae645771d22f52aec44ffa4fbdfd5a6bea280826de3baaa6688406262\",\"dweb:/ipfs/Qmf1Ti1rFQm5dZsqng9ZYMewt3CPPDvd52SBxxJfvthfvk\"]},\"project:/contracts/interfaces/IMushroomswapFactory.sol\":{\"keccak256\":\"0xcf9311ddc91f971e15d9dc736b8d801ffa309d907596bddee2e71746a2a27f8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f77ce74c1f3356573b55d43ff4ed9dd3f09d83916e351c801c0d0d79c796e8d6\",\"dweb:/ipfs/Qme6dErLNd8TesyTviT9Psw4MrJpfXS8Nj9RABkV4x6oTT\"]},\"project:/contracts/interfaces/IMushroomswapPair.sol\":{\"keccak256\":\"0x9d965deb0fefdeb543901c74f87f704c6847fffee13092fb95327c1cd6bc7d92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45eb8154706db00a47e8d259e399469601ef497a177a197150b832bb6f53e179\",\"dweb:/ipfs/QmTyoswxKV8GfEnzh6eDpuE52XaGQBy4rvLByUC1LwW4qw\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x2e3196dcd707ce5ec90291c0e4b7e86f517a9a4009f1539bcf8307e8f3a8d79b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2b8a5e690e8d47e4534bfea1573585f95b154cd683f8b515cd9e3a3ae4bb159\",\"dweb:/ipfs/QmdcnDWSXmV4VigMuJ37aA6tPsyEL3TPNMSVvPFbW15hMi\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x3041f5eaa7054e8097e8221902772c3eaf117e0ef9298eb38597d0f81ea2f188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://703a08e0143671186749e99e9cd8ee7e4c7b5d2a434a66d33358f8cc96700b93\",\"dweb:/ipfs/QmdRPJy9gbZG2jXvJQpG4ceirdNfhmuUYQHj49PdhD5EV4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162004d8038038062004d80833981810160405281019061003491906100de565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ab82610080565b9050919050565b6100bb816100a0565b81146100c657600080fd5b50565b6000815190506100d8816100b2565b92915050565b6000602082840312156100f4576100f361007b565b5b6000610102848285016100c9565b91505092915050565b614c65806200011b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063a2e74af61162000063578063a2e74af61462000135578063c9c653961462000155578063e6a43905146200018b578063f46901ed14620001c15762000094565b8063017e7e581462000099578063094b741514620000bb5780631e3dd18b14620000dd578063574f2ba31462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a1a565b60405180910390f35b620000c562000205565b604051620000d4919062000a1a565b60405180910390f35b620000fb6004803603810190620000f5919062000a77565b6200022b565b6040516200010a919062000a1a565b60405180910390f35b6200011d6200026b565b6040516200012c919062000aba565b60405180910390f35b6200015360048036038101906200014d919062000b08565b62000278565b005b6200017360048036038101906200016d919062000b3a565b6200034f565b60405162000182919062000a1a565b60405180910390f35b620001a96004803603810190620001a3919062000b3a565b620008af565b604051620001b8919062000a1a565b60405180910390f35b620001df6004803603810190620001d9919062000b08565b620008f1565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200023c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003029062000be2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003b99062000c7a565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200040157838562000404565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200047a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004719062000cec565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200057f9062000d5e565b60405180910390fd5b6000604051806020016200059c90620009c7565b6020820181038252601f19601f82011660405250905060008383604051602001620005c992919062000dd0565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200062a92919062000e00565b600060405180830381600087803b1580156200064557600080fd5b505af11580156200065a573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200089d92919062000e2d565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000984576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200097b9062000be2565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b613dd58062000e5b83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0282620009d5565b9050919050565b62000a1481620009f5565b82525050565b600060208201905062000a31600083018462000a09565b92915050565b600080fd5b6000819050919050565b62000a518162000a3c565b811462000a5d57600080fd5b50565b60008135905062000a718162000a46565b92915050565b60006020828403121562000a905762000a8f62000a37565b5b600062000aa08482850162000a60565b91505092915050565b62000ab48162000a3c565b82525050565b600060208201905062000ad1600083018462000aa9565b92915050565b62000ae281620009f5565b811462000aee57600080fd5b50565b60008135905062000b028162000ad7565b92915050565b60006020828403121562000b215762000b2062000a37565b5b600062000b318482850162000af1565b91505092915050565b6000806040838503121562000b545762000b5362000a37565b5b600062000b648582860162000af1565b925050602062000b778582860162000af1565b9150509250929050565b600082825260208201905092915050565b7f4d757368726f6f6d737761703a20464f5242494444454e000000000000000000600082015250565b600062000bca60178362000b81565b915062000bd78262000b92565b602082019050919050565b6000602082019050818103600083015262000bfd8162000bbb565b9050919050565b7f4d757368726f6f6d737761703a204944454e544943414c5f414444524553534560008201527f5300000000000000000000000000000000000000000000000000000000000000602082015250565b600062000c6260218362000b81565b915062000c6f8262000c04565b604082019050919050565b6000602082019050818103600083015262000c958162000c53565b9050919050565b7f4d757368726f6f6d737761703a205a45524f5f41444452455353000000000000600082015250565b600062000cd4601a8362000b81565b915062000ce18262000c9c565b602082019050919050565b6000602082019050818103600083015262000d078162000cc5565b9050919050565b7f4d757368726f6f6d737761703a20504149525f45584953545300000000000000600082015250565b600062000d4660198362000b81565b915062000d538262000d0e565b602082019050919050565b6000602082019050818103600083015262000d798162000d37565b9050919050565b60008160601b9050919050565b600062000d9a8262000d80565b9050919050565b600062000dae8262000d8d565b9050919050565b62000dca62000dc482620009f5565b62000da1565b82525050565b600062000dde828562000db5565b60148201915062000df0828462000db5565b6014820191508190509392505050565b600060408201905062000e17600083018562000a09565b62000e26602083018462000a09565b9392505050565b600060408201905062000e44600083018562000a09565b62000e53602083018462000aa9565b939250505056fe60806040526001600c553480156200001657600080fd5b507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600881526020017f4d757368726f6f6d000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000ca959493929190620001a8565b6040516020818303038152906040528051906020012060038190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000205565b6000819050919050565b62000142816200012d565b82525050565b6000819050919050565b6200015d8162000148565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001908262000163565b9050919050565b620001a28162000183565b82525050565b600060a082019050620001bf600083018862000137565b620001ce602083018762000137565b620001dd604083018662000137565b620001ec606083018562000152565b620001fb608083018462000197565b9695505050505050565b613bc080620002156000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063ba9a7a5614610483578063bc25cf77146104a1578063c45a0155146104bd576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd116101665780633644e515116101405780633644e515146102e0578063485cc955146102fe5780635909c0d51461031a5780635a3d549314610338576101a9565b806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630dfe16811461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c39190612a0c565b61054f565b005b6101d2610b62565b6040516101df9190612b24565b60405180910390f35b6101f0610b9b565b6040516101ff93929190612b8e565b60405180910390f35b610222600480360381019061021d9190612bc5565b610bf8565b60405161022f9190612c20565b60405180910390f35b610240610c0f565b60405161024d9190612c4a565b60405180910390f35b61025e610c35565b60405161026b9190612c74565b60405180910390f35b61028e60048036038101906102899190612c8f565b610c3b565b60405161029b9190612c20565b60405180910390f35b6102ac610d8a565b6040516102b99190612cfb565b60405180910390f35b6102ca610db1565b6040516102d79190612d32565b60405180910390f35b6102e8610db6565b6040516102f59190612cfb565b60405180910390f35b61031860048036038101906103139190612d4d565b610dbc565b005b610322610ed2565b60405161032f9190612c74565b60405180910390f35b610340610ed8565b60405161034d9190612c74565b60405180910390f35b610370600480360381019061036b9190612d8d565b610ede565b60405161037d9190612c74565b60405180910390f35b6103a0600480360381019061039b9190612d8d565b611296565b6040516103ad9190612c74565b60405180910390f35b6103be6112ae565b6040516103cb9190612c74565b60405180910390f35b6103ee60048036038101906103e99190612d8d565b6112b4565b6040516103fb9190612c74565b60405180910390f35b61041e60048036038101906104199190612d8d565b6112cc565b60405161042c929190612dba565b60405180910390f35b61043d611761565b60405161044a9190612b24565b60405180910390f35b61046d60048036038101906104689190612bc5565b61179a565b60405161047a9190612c20565b60405180910390f35b61048b6117b1565b6040516104989190612c74565b60405180910390f35b6104bb60048036038101906104b69190612d8d565b6117b7565b005b6104c56119d5565b6040516104d29190612c4a565b60405180910390f35b6104e36119fb565b6040516104f09190612c4a565b60405180910390f35b610513600480360381019061050e9190612e3b565b611a21565b005b61052f600480360381019061052a9190612d4d565b611c49565b60405161053c9190612c74565b60405180910390f35b61054d611c6e565b005b6001600c5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90612f29565b60405180910390fd5b6000600c8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190612fbb565b60405180910390fd5b6000806105f5610b9b565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e9061304d565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906130b9565b60405180910390fd5b60008b111561077457610773828a8d611e3f565b5b60008a111561078957610788818a8c611e3f565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff1663ce7bcb6e338d8d8c8c6040518663ffffffff1660e01b81526004016107d6959493929190613126565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190612c4a565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190613189565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108be9190612c4a565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190613189565b92505050600089856dffffffffffffffffffffffffffff1661092191906131e5565b831161092e576000610956565b89856dffffffffffffffffffffffffffff1661094a91906131e5565b8361095591906131e5565b5b9050600089856dffffffffffffffffffffffffffff1661097691906131e5565b83116109835760006109ab565b89856dffffffffffffffffffffffffffff1661099f91906131e5565b836109aa91906131e5565b5b905060008211806109bc5750600081115b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f29061328b565b60405180910390fd5b6000600383610a0a91906132ab565b6103e886610a1891906132ab565b610a2291906131e5565b90506000600383610a3391906132ab565b6103e886610a4191906132ab565b610a4b91906131e5565b9050620f4240876dffffffffffffffffffffffffffff16896dffffffffffffffffffffffffffff16610a7d91906132ab565b610a8791906132ab565b8183610a9391906132ab565b1015610ad4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acb90613351565b60405180910390fd5b5050610ae284848888611fc9565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b459493929190613371565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600881526020017f4d757368726f6f6d00000000000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610c053384846122bd565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610d745781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d6c91906131e5565b925050819055505b610d7f8484846123a8565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390613402565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c5414610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c90612f29565b60405180910390fd5b6000600c81905550600080610f38610b9b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f9a9190612c4a565b602060405180830381865afa158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb9190613189565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161103a9190612c4a565b602060405180830381865afa158015611057573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107b9190613189565b90506000846dffffffffffffffffffffffffffff168361109b91906131e5565b90506000846dffffffffffffffffffffffffffff16836110bb91906131e5565b905060006110c987876124be565b90506000805490506000810361110e576103e86110f084866110eb91906132ab565b61266c565b6110fa91906131e5565b985061110960006103e86126e6565b611167565b611164886dffffffffffffffffffffffffffff16828661112e91906132ab565b6111389190613451565b886dffffffffffffffffffffffffffff16838661115591906132ab565b61115f9190613451565b6127be565b98505b600089116111aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a1906134f4565b60405180910390fd5b6111b48a8a6126e6565b6111c086868a8a611fc9565b8115611231576008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661122a91906132ab565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051611279929190612dba565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130b90612f29565b60405180910390fd5b6000600c81905550600080611327610b9b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113b59190612c4a565b602060405180830381865afa1580156113d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f69190613189565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114339190612c4a565b602060405180830381865afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114749190613189565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006114c688886124be565b90506000805490508085846114db91906132ab565b6114e59190613451565b9a508084846114f491906132ab565b6114fe9190613451565b995060008b118015611510575060008a115b61154f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154690613586565b60405180910390fd5b61155930846127d7565b611564878d8d611e3f565b61156f868d8c611e3f565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115a89190612c4a565b602060405180830381865afa1580156115c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e99190613189565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116249190612c4a565b602060405180830381865afa158015611641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116659190613189565b935061167385858b8b611fc9565b81156116e4576008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166116dd91906132ab565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611743929190612dba565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600481526020017f4d7573680000000000000000000000000000000000000000000000000000000081525081565b60006117a73384846123a8565b6001905092915050565b6103e881565b6001600c54146117fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f390612f29565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061190d8284600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118bd9190612c4a565b602060405180830381865afa1580156118da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fe9190613189565b61190891906131e5565b611e3f565b6119c881846008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119789190612c4a565b602060405180830381865afa158015611995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b99190613189565b6119c391906131e5565b611e3f565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5b906135f2565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611ae090613612565b919050558a604051602001611afa9695949392919061365a565b60405160208183030381529060405280519060200120604051602001611b21929190613733565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611b5e949392919061376a565b6020604051602081039080840390855afa158015611b80573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611bf457508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2a906137fb565b60405180910390fd5b611c3e8989896122bd565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611cb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611caa90612f29565b60405180910390fd5b6000600c81905550611e35600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d199190612c4a565b602060405180830381865afa158015611d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5a9190613189565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611db59190612c4a565b602060405180830381865afa158015611dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df69190613189565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16611fc9565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611ea992919061381b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f13919061388b565b6000604051808303816000865af19150503d8060008114611f50576040519150601f19603f3d011682016040523d82523d6000602084013e611f55565b606091505b5091509150818015611f835750600081511480611f82575080806020019051810190611f8191906138ce565b5b5b611fc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fb990613947565b60405180910390fd5b5050505050565b6dffffffffffffffffffffffffffff80168411158015611ff957506dffffffffffffffffffffffffffff80168311155b612038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202f906139b3565b60405180910390fd5b60006401000000004261204b91906139d3565b905060006008601c9054906101000a900463ffffffff168261206d9190613a04565b905060008163ffffffff1611801561209657506000846dffffffffffffffffffffffffffff1614155b80156120b357506000836dffffffffffffffffffffffffffff1614155b156121b9578063ffffffff166120f8856120cc866128af565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166128e390919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661212091906132ab565b600960008282546121319190613a3c565b925050819055508063ffffffff166121788461214c876128af565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166128e390919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166121a091906132ab565b600a60008282546121b19190613a3c565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166040516122ad929190613a70565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161239b9190612c74565b60405180910390a3505050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123f791906131e5565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461244d9190613a3c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516124b19190612c74565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa15801561252e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125529190613aae565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b5490508215612652576000811461264d5760006125d2856dffffffffffffffffffffffffffff16876dffffffffffffffffffffffffffff166125cd91906132ab565b61266c565b905060006125df8361266c565b90508082111561264a57600081836125f791906131e5565b60005461260491906132ab565b905060008260058561261691906132ab565b6126209190613a3c565b9050600081836126309190613451565b905060008111156126465761264587826126e6565b5b5050505b50505b612664565b60008114612663576000600b819055505b5b505092915050565b600060038211156126d3578190506000600160028461268b9190613451565b6126959190613a3c565b90505b818110156126cd5780915060028182856126b29190613451565b6126bc9190613a3c565b6126c69190613451565b9050612698565b506126e1565b600082146126e057600190505b5b919050565b806000808282546126f79190613a3c565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461274d9190613a3c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127b29190612c74565b60405180910390a35050565b60008183106127cd57816127cf565b825b905092915050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461282691906131e5565b925050819055508060008082825461283e91906131e5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128a39190612c74565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff166128dc9190613b03565b9050919050565b6000816dffffffffffffffffffffffffffff16836129019190613b59565b905092915050565b600080fd5b600080fd5b6000819050919050565b61292681612913565b811461293157600080fd5b50565b6000813590506129438161291d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061297482612949565b9050919050565b61298481612969565b811461298f57600080fd5b50565b6000813590506129a18161297b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126129cc576129cb6129a7565b5b8235905067ffffffffffffffff8111156129e9576129e86129ac565b5b602083019150836001820283011115612a0557612a046129b1565b5b9250929050565b600080600080600060808688031215612a2857612a27612909565b5b6000612a3688828901612934565b9550506020612a4788828901612934565b9450506040612a5888828901612992565b935050606086013567ffffffffffffffff811115612a7957612a7861290e565b5b612a85888289016129b6565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ace578082015181840152602081019050612ab3565b60008484015250505050565b6000601f19601f8301169050919050565b6000612af682612a94565b612b008185612a9f565b9350612b10818560208601612ab0565b612b1981612ada565b840191505092915050565b60006020820190508181036000830152612b3e8184612aeb565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612b6981612b46565b82525050565b600063ffffffff82169050919050565b612b8881612b6f565b82525050565b6000606082019050612ba36000830186612b60565b612bb06020830185612b60565b612bbd6040830184612b7f565b949350505050565b60008060408385031215612bdc57612bdb612909565b5b6000612bea85828601612992565b9250506020612bfb85828601612934565b9150509250929050565b60008115159050919050565b612c1a81612c05565b82525050565b6000602082019050612c356000830184612c11565b92915050565b612c4481612969565b82525050565b6000602082019050612c5f6000830184612c3b565b92915050565b612c6e81612913565b82525050565b6000602082019050612c896000830184612c65565b92915050565b600080600060608486031215612ca857612ca7612909565b5b6000612cb686828701612992565b9350506020612cc786828701612992565b9250506040612cd886828701612934565b9150509250925092565b6000819050919050565b612cf581612ce2565b82525050565b6000602082019050612d106000830184612cec565b92915050565b600060ff82169050919050565b612d2c81612d16565b82525050565b6000602082019050612d476000830184612d23565b92915050565b60008060408385031215612d6457612d63612909565b5b6000612d7285828601612992565b9250506020612d8385828601612992565b9150509250929050565b600060208284031215612da357612da2612909565b5b6000612db184828501612992565b91505092915050565b6000604082019050612dcf6000830185612c65565b612ddc6020830184612c65565b9392505050565b612dec81612d16565b8114612df757600080fd5b50565b600081359050612e0981612de3565b92915050565b612e1881612ce2565b8114612e2357600080fd5b50565b600081359050612e3581612e0f565b92915050565b600080600080600080600060e0888a031215612e5a57612e59612909565b5b6000612e688a828b01612992565b9750506020612e798a828b01612992565b9650506040612e8a8a828b01612934565b9550506060612e9b8a828b01612934565b9450506080612eac8a828b01612dfa565b93505060a0612ebd8a828b01612e26565b92505060c0612ece8a828b01612e26565b91505092959891949750929550565b7f4d757368726f6f6d737761703a204c4f434b4544000000000000000000000000600082015250565b6000612f13601483612a9f565b9150612f1e82612edd565b602082019050919050565b60006020820190508181036000830152612f4281612f06565b9050919050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f4f5554505560008201527f545f414d4f554e54000000000000000000000000000000000000000000000000602082015250565b6000612fa5602883612a9f565b9150612fb082612f49565b604082019050919050565b60006020820190508181036000830152612fd481612f98565b9050919050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f4c4951554960008201527f4449545900000000000000000000000000000000000000000000000000000000602082015250565b6000613037602483612a9f565b915061304282612fdb565b604082019050919050565b600060208201905081810360008301526130668161302a565b9050919050565b7f4d757368726f6f6d737761703a20494e56414c49445f544f0000000000000000600082015250565b60006130a3601883612a9f565b91506130ae8261306d565b602082019050919050565b600060208201905081810360008301526130d281613096565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b600061310583856130d9565b93506131128385846130ea565b61311b83612ada565b840190509392505050565b600060808201905061313b6000830188612c3b565b6131486020830187612c65565b6131556040830186612c65565b81810360608301526131688184866130f9565b90509695505050505050565b6000815190506131838161291d565b92915050565b60006020828403121561319f5761319e612909565b5b60006131ad84828501613174565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006131f082612913565b91506131fb83612913565b9250828203905081811115613213576132126131b6565b5b92915050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f494e50555460008201527f5f414d4f554e5400000000000000000000000000000000000000000000000000602082015250565b6000613275602783612a9f565b915061328082613219565b604082019050919050565b600060208201905081810360008301526132a481613268565b9050919050565b60006132b682612913565b91506132c183612913565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132fa576132f96131b6565b5b828202905092915050565b7f4d757368726f6f6d737761703a204b0000000000000000000000000000000000600082015250565b600061333b600f83612a9f565b915061334682613305565b602082019050919050565b6000602082019050818103600083015261336a8161332e565b9050919050565b60006080820190506133866000830187612c65565b6133936020830186612c65565b6133a06040830185612c65565b6133ad6060830184612c65565b95945050505050565b7f4d757368726f6f6d737761703a20464f5242494444454e000000000000000000600082015250565b60006133ec601783612a9f565b91506133f7826133b6565b602082019050919050565b6000602082019050818103600083015261341b816133df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061345c82612913565b915061346783612913565b92508261347757613476613422565b5b828204905092915050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f4c4951554960008201527f444954595f4d494e544544000000000000000000000000000000000000000000602082015250565b60006134de602b83612a9f565b91506134e982613482565b604082019050919050565b6000602082019050818103600083015261350d816134d1565b9050919050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f4c4951554960008201527f444954595f4255524e4544000000000000000000000000000000000000000000602082015250565b6000613570602b83612a9f565b915061357b82613514565b604082019050919050565b6000602082019050818103600083015261359f81613563565b9050919050565b7f556e697377617056323a20455850495245440000000000000000000000000000600082015250565b60006135dc601283612a9f565b91506135e7826135a6565b602082019050919050565b6000602082019050818103600083015261360b816135cf565b9050919050565b600061361d82612913565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361364f5761364e6131b6565b5b600182019050919050565b600060c08201905061366f6000830189612cec565b61367c6020830188612c3b565b6136896040830187612c3b565b6136966060830186612c65565b6136a36080830185612c65565b6136b060a0830184612c65565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006136fc6002836136bb565b9150613707826136c6565b600282019050919050565b6000819050919050565b61372d61372882612ce2565b613712565b82525050565b600061373e826136ef565b915061374a828561371c565b60208201915061375a828461371c565b6020820191508190509392505050565b600060808201905061377f6000830187612cec565b61378c6020830186612d23565b6137996040830185612cec565b6137a66060830184612cec565b95945050505050565b7f556e697377617056323a20494e56414c49445f5349474e415455524500000000600082015250565b60006137e5601c83612a9f565b91506137f0826137af565b602082019050919050565b60006020820190508181036000830152613814816137d8565b9050919050565b60006040820190506138306000830185612c3b565b61383d6020830184612c65565b9392505050565b600081519050919050565b600081905092915050565b600061386582613844565b61386f818561384f565b935061387f818560208601612ab0565b80840191505092915050565b6000613897828461385a565b915081905092915050565b6138ab81612c05565b81146138b657600080fd5b50565b6000815190506138c8816138a2565b92915050565b6000602082840312156138e4576138e3612909565b5b60006138f2848285016138b9565b91505092915050565b7f4d757368726f6f6d737761703a205452414e534645525f4641494c4544000000600082015250565b6000613931601d83612a9f565b915061393c826138fb565b602082019050919050565b6000602082019050818103600083015261396081613924565b9050919050565b7f4d757368726f6f6d737761703a204f564552464c4f5700000000000000000000600082015250565b600061399d601683612a9f565b91506139a882613967565b602082019050919050565b600060208201905081810360008301526139cc81613990565b9050919050565b60006139de82612913565b91506139e983612913565b9250826139f9576139f8613422565b5b828206905092915050565b6000613a0f82612b6f565b9150613a1a83612b6f565b9250828203905063ffffffff811115613a3657613a356131b6565b5b92915050565b6000613a4782612913565b9150613a5283612913565b9250828201905080821115613a6a57613a696131b6565b5b92915050565b6000604082019050613a856000830185612b60565b613a926020830184612b60565b9392505050565b600081519050613aa88161297b565b92915050565b600060208284031215613ac457613ac3612909565b5b6000613ad284828501613a99565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613b0e82613adb565b9150613b1983613adb565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b4e57613b4d6131b6565b5b828202905092915050565b6000613b6482613adb565b9150613b6f83613adb565b925082613b7f57613b7e613422565b5b82820490509291505056fea264697066735822122029f9e3264da3665a1141d047268c87d5d20ddeaf521f8a46a824cfe171c9bdc364736f6c63430008100033a264697066735822122047b4c5f8aeeb6e1e9c3ab6eaded1ea447bac3d6bb7803b8e90fb62f3da77eb3664736f6c63430008100033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063a2e74af61162000063578063a2e74af61462000135578063c9c653961462000155578063e6a43905146200018b578063f46901ed14620001c15762000094565b8063017e7e581462000099578063094b741514620000bb5780631e3dd18b14620000dd578063574f2ba31462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a1a565b60405180910390f35b620000c562000205565b604051620000d4919062000a1a565b60405180910390f35b620000fb6004803603810190620000f5919062000a77565b6200022b565b6040516200010a919062000a1a565b60405180910390f35b6200011d6200026b565b6040516200012c919062000aba565b60405180910390f35b6200015360048036038101906200014d919062000b08565b62000278565b005b6200017360048036038101906200016d919062000b3a565b6200034f565b60405162000182919062000a1a565b60405180910390f35b620001a96004803603810190620001a3919062000b3a565b620008af565b604051620001b8919062000a1a565b60405180910390f35b620001df6004803603810190620001d9919062000b08565b620008f1565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200023c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003029062000be2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003b99062000c7a565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200040157838562000404565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200047a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004719062000cec565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200057f9062000d5e565b60405180910390fd5b6000604051806020016200059c90620009c7565b6020820181038252601f19601f82011660405250905060008383604051602001620005c992919062000dd0565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200062a92919062000e00565b600060405180830381600087803b1580156200064557600080fd5b505af11580156200065a573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200089d92919062000e2d565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000984576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200097b9062000be2565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b613dd58062000e5b83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0282620009d5565b9050919050565b62000a1481620009f5565b82525050565b600060208201905062000a31600083018462000a09565b92915050565b600080fd5b6000819050919050565b62000a518162000a3c565b811462000a5d57600080fd5b50565b60008135905062000a718162000a46565b92915050565b60006020828403121562000a905762000a8f62000a37565b5b600062000aa08482850162000a60565b91505092915050565b62000ab48162000a3c565b82525050565b600060208201905062000ad1600083018462000aa9565b92915050565b62000ae281620009f5565b811462000aee57600080fd5b50565b60008135905062000b028162000ad7565b92915050565b60006020828403121562000b215762000b2062000a37565b5b600062000b318482850162000af1565b91505092915050565b6000806040838503121562000b545762000b5362000a37565b5b600062000b648582860162000af1565b925050602062000b778582860162000af1565b9150509250929050565b600082825260208201905092915050565b7f4d757368726f6f6d737761703a20464f5242494444454e000000000000000000600082015250565b600062000bca60178362000b81565b915062000bd78262000b92565b602082019050919050565b6000602082019050818103600083015262000bfd8162000bbb565b9050919050565b7f4d757368726f6f6d737761703a204944454e544943414c5f414444524553534560008201527f5300000000000000000000000000000000000000000000000000000000000000602082015250565b600062000c6260218362000b81565b915062000c6f8262000c04565b604082019050919050565b6000602082019050818103600083015262000c958162000c53565b9050919050565b7f4d757368726f6f6d737761703a205a45524f5f41444452455353000000000000600082015250565b600062000cd4601a8362000b81565b915062000ce18262000c9c565b602082019050919050565b6000602082019050818103600083015262000d078162000cc5565b9050919050565b7f4d757368726f6f6d737761703a20504149525f45584953545300000000000000600082015250565b600062000d4660198362000b81565b915062000d538262000d0e565b602082019050919050565b6000602082019050818103600083015262000d798162000d37565b9050919050565b60008160601b9050919050565b600062000d9a8262000d80565b9050919050565b600062000dae8262000d8d565b9050919050565b62000dca62000dc482620009f5565b62000da1565b82525050565b600062000dde828562000db5565b60148201915062000df0828462000db5565b6014820191508190509392505050565b600060408201905062000e17600083018562000a09565b62000e26602083018462000a09565b9392505050565b600060408201905062000e44600083018562000a09565b62000e53602083018462000aa9565b939250505056fe60806040526001600c553480156200001657600080fd5b507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600881526020017f4d757368726f6f6d000000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001620000ca959493929190620001a8565b6040516020818303038152906040528051906020012060038190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000205565b6000819050919050565b62000142816200012d565b82525050565b6000819050919050565b6200015d8162000148565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001908262000163565b9050919050565b620001a28162000183565b82525050565b600060a082019050620001bf600083018862000137565b620001ce602083018762000137565b620001dd604083018662000137565b620001ec606083018562000152565b620001fb608083018462000197565b9695505050505050565b613bc080620002156000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063ba9a7a5614610483578063bc25cf77146104a1578063c45a0155146104bd576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd116101665780633644e515116101405780633644e515146102e0578063485cc955146102fe5780635909c0d51461031a5780635a3d549314610338576101a9565b806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630dfe16811461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c39190612a0c565b61054f565b005b6101d2610b62565b6040516101df9190612b24565b60405180910390f35b6101f0610b9b565b6040516101ff93929190612b8e565b60405180910390f35b610222600480360381019061021d9190612bc5565b610bf8565b60405161022f9190612c20565b60405180910390f35b610240610c0f565b60405161024d9190612c4a565b60405180910390f35b61025e610c35565b60405161026b9190612c74565b60405180910390f35b61028e60048036038101906102899190612c8f565b610c3b565b60405161029b9190612c20565b60405180910390f35b6102ac610d8a565b6040516102b99190612cfb565b60405180910390f35b6102ca610db1565b6040516102d79190612d32565b60405180910390f35b6102e8610db6565b6040516102f59190612cfb565b60405180910390f35b61031860048036038101906103139190612d4d565b610dbc565b005b610322610ed2565b60405161032f9190612c74565b60405180910390f35b610340610ed8565b60405161034d9190612c74565b60405180910390f35b610370600480360381019061036b9190612d8d565b610ede565b60405161037d9190612c74565b60405180910390f35b6103a0600480360381019061039b9190612d8d565b611296565b6040516103ad9190612c74565b60405180910390f35b6103be6112ae565b6040516103cb9190612c74565b60405180910390f35b6103ee60048036038101906103e99190612d8d565b6112b4565b6040516103fb9190612c74565b60405180910390f35b61041e60048036038101906104199190612d8d565b6112cc565b60405161042c929190612dba565b60405180910390f35b61043d611761565b60405161044a9190612b24565b60405180910390f35b61046d60048036038101906104689190612bc5565b61179a565b60405161047a9190612c20565b60405180910390f35b61048b6117b1565b6040516104989190612c74565b60405180910390f35b6104bb60048036038101906104b69190612d8d565b6117b7565b005b6104c56119d5565b6040516104d29190612c4a565b60405180910390f35b6104e36119fb565b6040516104f09190612c4a565b60405180910390f35b610513600480360381019061050e9190612e3b565b611a21565b005b61052f600480360381019061052a9190612d4d565b611c49565b60405161053c9190612c74565b60405180910390f35b61054d611c6e565b005b6001600c5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90612f29565b60405180910390fd5b6000600c8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190612fbb565b60405180910390fd5b6000806105f5610b9b565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e9061304d565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906130b9565b60405180910390fd5b60008b111561077457610773828a8d611e3f565b5b60008a111561078957610788818a8c611e3f565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff1663ce7bcb6e338d8d8c8c6040518663ffffffff1660e01b81526004016107d6959493929190613126565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190612c4a565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190613189565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108be9190612c4a565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190613189565b92505050600089856dffffffffffffffffffffffffffff1661092191906131e5565b831161092e576000610956565b89856dffffffffffffffffffffffffffff1661094a91906131e5565b8361095591906131e5565b5b9050600089856dffffffffffffffffffffffffffff1661097691906131e5565b83116109835760006109ab565b89856dffffffffffffffffffffffffffff1661099f91906131e5565b836109aa91906131e5565b5b905060008211806109bc5750600081115b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f29061328b565b60405180910390fd5b6000600383610a0a91906132ab565b6103e886610a1891906132ab565b610a2291906131e5565b90506000600383610a3391906132ab565b6103e886610a4191906132ab565b610a4b91906131e5565b9050620f4240876dffffffffffffffffffffffffffff16896dffffffffffffffffffffffffffff16610a7d91906132ab565b610a8791906132ab565b8183610a9391906132ab565b1015610ad4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acb90613351565b60405180910390fd5b5050610ae284848888611fc9565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b459493929190613371565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600881526020017f4d757368726f6f6d00000000000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610c053384846122bd565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610d745781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d6c91906131e5565b925050819055505b610d7f8484846123a8565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390613402565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c5414610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c90612f29565b60405180910390fd5b6000600c81905550600080610f38610b9b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f9a9190612c4a565b602060405180830381865afa158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb9190613189565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161103a9190612c4a565b602060405180830381865afa158015611057573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107b9190613189565b90506000846dffffffffffffffffffffffffffff168361109b91906131e5565b90506000846dffffffffffffffffffffffffffff16836110bb91906131e5565b905060006110c987876124be565b90506000805490506000810361110e576103e86110f084866110eb91906132ab565b61266c565b6110fa91906131e5565b985061110960006103e86126e6565b611167565b611164886dffffffffffffffffffffffffffff16828661112e91906132ab565b6111389190613451565b886dffffffffffffffffffffffffffff16838661115591906132ab565b61115f9190613451565b6127be565b98505b600089116111aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a1906134f4565b60405180910390fd5b6111b48a8a6126e6565b6111c086868a8a611fc9565b8115611231576008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661122a91906132ab565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051611279929190612dba565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130b90612f29565b60405180910390fd5b6000600c81905550600080611327610b9b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113b59190612c4a565b602060405180830381865afa1580156113d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f69190613189565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114339190612c4a565b602060405180830381865afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114749190613189565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006114c688886124be565b90506000805490508085846114db91906132ab565b6114e59190613451565b9a508084846114f491906132ab565b6114fe9190613451565b995060008b118015611510575060008a115b61154f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154690613586565b60405180910390fd5b61155930846127d7565b611564878d8d611e3f565b61156f868d8c611e3f565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115a89190612c4a565b602060405180830381865afa1580156115c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e99190613189565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116249190612c4a565b602060405180830381865afa158015611641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116659190613189565b935061167385858b8b611fc9565b81156116e4576008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166116dd91906132ab565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611743929190612dba565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600481526020017f4d7573680000000000000000000000000000000000000000000000000000000081525081565b60006117a73384846123a8565b6001905092915050565b6103e881565b6001600c54146117fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f390612f29565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061190d8284600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118bd9190612c4a565b602060405180830381865afa1580156118da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fe9190613189565b61190891906131e5565b611e3f565b6119c881846008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119789190612c4a565b602060405180830381865afa158015611995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b99190613189565b6119c391906131e5565b611e3f565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5b906135f2565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611ae090613612565b919050558a604051602001611afa9695949392919061365a565b60405160208183030381529060405280519060200120604051602001611b21929190613733565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611b5e949392919061376a565b6020604051602081039080840390855afa158015611b80573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611bf457508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2a906137fb565b60405180910390fd5b611c3e8989896122bd565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611cb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611caa90612f29565b60405180910390fd5b6000600c81905550611e35600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d199190612c4a565b602060405180830381865afa158015611d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5a9190613189565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611db59190612c4a565b602060405180830381865afa158015611dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df69190613189565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16611fc9565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611ea992919061381b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f13919061388b565b6000604051808303816000865af19150503d8060008114611f50576040519150601f19603f3d011682016040523d82523d6000602084013e611f55565b606091505b5091509150818015611f835750600081511480611f82575080806020019051810190611f8191906138ce565b5b5b611fc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fb990613947565b60405180910390fd5b5050505050565b6dffffffffffffffffffffffffffff80168411158015611ff957506dffffffffffffffffffffffffffff80168311155b612038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202f906139b3565b60405180910390fd5b60006401000000004261204b91906139d3565b905060006008601c9054906101000a900463ffffffff168261206d9190613a04565b905060008163ffffffff1611801561209657506000846dffffffffffffffffffffffffffff1614155b80156120b357506000836dffffffffffffffffffffffffffff1614155b156121b9578063ffffffff166120f8856120cc866128af565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166128e390919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661212091906132ab565b600960008282546121319190613a3c565b925050819055508063ffffffff166121788461214c876128af565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166128e390919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166121a091906132ab565b600a60008282546121b19190613a3c565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166040516122ad929190613a70565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161239b9190612c74565b60405180910390a3505050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123f791906131e5565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461244d9190613a3c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516124b19190612c74565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa15801561252e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125529190613aae565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b5490508215612652576000811461264d5760006125d2856dffffffffffffffffffffffffffff16876dffffffffffffffffffffffffffff166125cd91906132ab565b61266c565b905060006125df8361266c565b90508082111561264a57600081836125f791906131e5565b60005461260491906132ab565b905060008260058561261691906132ab565b6126209190613a3c565b9050600081836126309190613451565b905060008111156126465761264587826126e6565b5b5050505b50505b612664565b60008114612663576000600b819055505b5b505092915050565b600060038211156126d3578190506000600160028461268b9190613451565b6126959190613a3c565b90505b818110156126cd5780915060028182856126b29190613451565b6126bc9190613a3c565b6126c69190613451565b9050612698565b506126e1565b600082146126e057600190505b5b919050565b806000808282546126f79190613a3c565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461274d9190613a3c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127b29190612c74565b60405180910390a35050565b60008183106127cd57816127cf565b825b905092915050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461282691906131e5565b925050819055508060008082825461283e91906131e5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128a39190612c74565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff166128dc9190613b03565b9050919050565b6000816dffffffffffffffffffffffffffff16836129019190613b59565b905092915050565b600080fd5b600080fd5b6000819050919050565b61292681612913565b811461293157600080fd5b50565b6000813590506129438161291d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061297482612949565b9050919050565b61298481612969565b811461298f57600080fd5b50565b6000813590506129a18161297b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126129cc576129cb6129a7565b5b8235905067ffffffffffffffff8111156129e9576129e86129ac565b5b602083019150836001820283011115612a0557612a046129b1565b5b9250929050565b600080600080600060808688031215612a2857612a27612909565b5b6000612a3688828901612934565b9550506020612a4788828901612934565b9450506040612a5888828901612992565b935050606086013567ffffffffffffffff811115612a7957612a7861290e565b5b612a85888289016129b6565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ace578082015181840152602081019050612ab3565b60008484015250505050565b6000601f19601f8301169050919050565b6000612af682612a94565b612b008185612a9f565b9350612b10818560208601612ab0565b612b1981612ada565b840191505092915050565b60006020820190508181036000830152612b3e8184612aeb565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612b6981612b46565b82525050565b600063ffffffff82169050919050565b612b8881612b6f565b82525050565b6000606082019050612ba36000830186612b60565b612bb06020830185612b60565b612bbd6040830184612b7f565b949350505050565b60008060408385031215612bdc57612bdb612909565b5b6000612bea85828601612992565b9250506020612bfb85828601612934565b9150509250929050565b60008115159050919050565b612c1a81612c05565b82525050565b6000602082019050612c356000830184612c11565b92915050565b612c4481612969565b82525050565b6000602082019050612c5f6000830184612c3b565b92915050565b612c6e81612913565b82525050565b6000602082019050612c896000830184612c65565b92915050565b600080600060608486031215612ca857612ca7612909565b5b6000612cb686828701612992565b9350506020612cc786828701612992565b9250506040612cd886828701612934565b9150509250925092565b6000819050919050565b612cf581612ce2565b82525050565b6000602082019050612d106000830184612cec565b92915050565b600060ff82169050919050565b612d2c81612d16565b82525050565b6000602082019050612d476000830184612d23565b92915050565b60008060408385031215612d6457612d63612909565b5b6000612d7285828601612992565b9250506020612d8385828601612992565b9150509250929050565b600060208284031215612da357612da2612909565b5b6000612db184828501612992565b91505092915050565b6000604082019050612dcf6000830185612c65565b612ddc6020830184612c65565b9392505050565b612dec81612d16565b8114612df757600080fd5b50565b600081359050612e0981612de3565b92915050565b612e1881612ce2565b8114612e2357600080fd5b50565b600081359050612e3581612e0f565b92915050565b600080600080600080600060e0888a031215612e5a57612e59612909565b5b6000612e688a828b01612992565b9750506020612e798a828b01612992565b9650506040612e8a8a828b01612934565b9550506060612e9b8a828b01612934565b9450506080612eac8a828b01612dfa565b93505060a0612ebd8a828b01612e26565b92505060c0612ece8a828b01612e26565b91505092959891949750929550565b7f4d757368726f6f6d737761703a204c4f434b4544000000000000000000000000600082015250565b6000612f13601483612a9f565b9150612f1e82612edd565b602082019050919050565b60006020820190508181036000830152612f4281612f06565b9050919050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f4f5554505560008201527f545f414d4f554e54000000000000000000000000000000000000000000000000602082015250565b6000612fa5602883612a9f565b9150612fb082612f49565b604082019050919050565b60006020820190508181036000830152612fd481612f98565b9050919050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f4c4951554960008201527f4449545900000000000000000000000000000000000000000000000000000000602082015250565b6000613037602483612a9f565b915061304282612fdb565b604082019050919050565b600060208201905081810360008301526130668161302a565b9050919050565b7f4d757368726f6f6d737761703a20494e56414c49445f544f0000000000000000600082015250565b60006130a3601883612a9f565b91506130ae8261306d565b602082019050919050565b600060208201905081810360008301526130d281613096565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b600061310583856130d9565b93506131128385846130ea565b61311b83612ada565b840190509392505050565b600060808201905061313b6000830188612c3b565b6131486020830187612c65565b6131556040830186612c65565b81810360608301526131688184866130f9565b90509695505050505050565b6000815190506131838161291d565b92915050565b60006020828403121561319f5761319e612909565b5b60006131ad84828501613174565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006131f082612913565b91506131fb83612913565b9250828203905081811115613213576132126131b6565b5b92915050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f494e50555460008201527f5f414d4f554e5400000000000000000000000000000000000000000000000000602082015250565b6000613275602783612a9f565b915061328082613219565b604082019050919050565b600060208201905081810360008301526132a481613268565b9050919050565b60006132b682612913565b91506132c183612913565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132fa576132f96131b6565b5b828202905092915050565b7f4d757368726f6f6d737761703a204b0000000000000000000000000000000000600082015250565b600061333b600f83612a9f565b915061334682613305565b602082019050919050565b6000602082019050818103600083015261336a8161332e565b9050919050565b60006080820190506133866000830187612c65565b6133936020830186612c65565b6133a06040830185612c65565b6133ad6060830184612c65565b95945050505050565b7f4d757368726f6f6d737761703a20464f5242494444454e000000000000000000600082015250565b60006133ec601783612a9f565b91506133f7826133b6565b602082019050919050565b6000602082019050818103600083015261341b816133df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061345c82612913565b915061346783612913565b92508261347757613476613422565b5b828204905092915050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f4c4951554960008201527f444954595f4d494e544544000000000000000000000000000000000000000000602082015250565b60006134de602b83612a9f565b91506134e982613482565b604082019050919050565b6000602082019050818103600083015261350d816134d1565b9050919050565b7f4d757368726f6f6d737761703a20494e53554646494349454e545f4c4951554960008201527f444954595f4255524e4544000000000000000000000000000000000000000000602082015250565b6000613570602b83612a9f565b915061357b82613514565b604082019050919050565b6000602082019050818103600083015261359f81613563565b9050919050565b7f556e697377617056323a20455850495245440000000000000000000000000000600082015250565b60006135dc601283612a9f565b91506135e7826135a6565b602082019050919050565b6000602082019050818103600083015261360b816135cf565b9050919050565b600061361d82612913565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361364f5761364e6131b6565b5b600182019050919050565b600060c08201905061366f6000830189612cec565b61367c6020830188612c3b565b6136896040830187612c3b565b6136966060830186612c65565b6136a36080830185612c65565b6136b060a0830184612c65565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006136fc6002836136bb565b9150613707826136c6565b600282019050919050565b6000819050919050565b61372d61372882612ce2565b613712565b82525050565b600061373e826136ef565b915061374a828561371c565b60208201915061375a828461371c565b6020820191508190509392505050565b600060808201905061377f6000830187612cec565b61378c6020830186612d23565b6137996040830185612cec565b6137a66060830184612cec565b95945050505050565b7f556e697377617056323a20494e56414c49445f5349474e415455524500000000600082015250565b60006137e5601c83612a9f565b91506137f0826137af565b602082019050919050565b60006020820190508181036000830152613814816137d8565b9050919050565b60006040820190506138306000830185612c3b565b61383d6020830184612c65565b9392505050565b600081519050919050565b600081905092915050565b600061386582613844565b61386f818561384f565b935061387f818560208601612ab0565b80840191505092915050565b6000613897828461385a565b915081905092915050565b6138ab81612c05565b81146138b657600080fd5b50565b6000815190506138c8816138a2565b92915050565b6000602082840312156138e4576138e3612909565b5b60006138f2848285016138b9565b91505092915050565b7f4d757368726f6f6d737761703a205452414e534645525f4641494c4544000000600082015250565b6000613931601d83612a9f565b915061393c826138fb565b602082019050919050565b6000602082019050818103600083015261396081613924565b9050919050565b7f4d757368726f6f6d737761703a204f564552464c4f5700000000000000000000600082015250565b600061399d601683612a9f565b91506139a882613967565b602082019050919050565b600060208201905081810360008301526139cc81613990565b9050919050565b60006139de82612913565b91506139e983612913565b9250826139f9576139f8613422565b5b828206905092915050565b6000613a0f82612b6f565b9150613a1a83612b6f565b9250828203905063ffffffff811115613a3657613a356131b6565b5b92915050565b6000613a4782612913565b9150613a5283612913565b9250828201905080821115613a6a57613a696131b6565b5b92915050565b6000604082019050613a856000830185612b60565b613a926020830184612b60565b9392505050565b600081519050613aa88161297b565b92915050565b600060208284031215613ac457613ac3612909565b5b6000613ad284828501613a99565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613b0e82613adb565b9150613b1983613adb565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b4e57613b4d6131b6565b5b828202905092915050565b6000613b6482613adb565b9150613b6f83613adb565b925082613b7f57613b7e613422565b5b82820490509291505056fea264697066735822122029f9e3264da3665a1141d047268c87d5d20ddeaf521f8a46a824cfe171c9bdc364736f6c63430008100033a264697066735822122047b4c5f8aeeb6e1e9c3ab6eaded1ea447bac3d6bb7803b8e90fb62f3da77eb3664736f6c63430008100033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:53",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:53"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:53",
                "type": ""
              }
            ],
            "src": "7:75:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:53",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:53"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:53",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:53"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:53",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:53"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:53"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:53",
                "type": ""
              }
            ],
            "src": "334:126:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:53"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:53"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:53",
                "type": ""
              }
            ],
            "src": "466:96:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:53"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:53"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:53"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:53",
                "type": ""
              }
            ],
            "src": "568:122:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:53"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:53"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:53",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:53",
                "type": ""
              }
            ],
            "src": "696:143:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:53"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:53",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:53",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:53",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:53",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:53",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:53"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:53"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:53"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:53",
                "type": ""
              }
            ],
            "src": "845:351:53"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8727:53",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:53",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:53"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:53"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:53",
                "type": ""
              }
            ],
            "src": "7:126:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:53"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:53"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:53",
                "type": ""
              }
            ],
            "src": "139:96:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:53"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:53"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:53",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:53",
                "type": ""
              }
            ],
            "src": "241:118:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:53",
                "type": ""
              }
            ],
            "src": "365:222:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:35:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:19:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "653:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:9:53"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "626:6:53",
                "type": ""
              }
            ],
            "src": "593:75:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:28:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:1:53",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:12:53"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "674:117:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:28:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:1:53",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "896:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:12:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "896:12:53"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "797:117:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:32:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "975:16:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "986:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:53"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "947:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "957:7:53",
                "type": ""
              }
            ],
            "src": "920:77:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:79:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1103:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1115:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1105:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1105:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1069:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1094:5:53"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1076:17:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1076:24:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:35:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1059:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:43:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1056:63:53"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1039:5:53",
                "type": ""
              }
            ],
            "src": "1003:122:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:87:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1193:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1215:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1202:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:20:53"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1193:5:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1258:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1231:26:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:33:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:33:53"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1161:6:53",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1169:3:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1177:5:53",
                "type": ""
              }
            ],
            "src": "1131:139:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1342:263:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1388:83:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1390:77:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:79:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1390:79:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1363:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1372:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1384:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1355:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1352:119:53"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1481:117:53",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1496:15:53",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1510:1:53",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1500:6:53",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1525:63:53",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1560:9:53"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1571:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1556:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1556:22:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1580:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1535:20:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:53:53"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1525:6:53"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1312:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1323:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1335:6:53",
                "type": ""
              }
            ],
            "src": "1276:329:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1716:5:53"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1698:17:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:24:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1686:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:37:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:37:53"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1664:5:53",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:53",
                "type": ""
              }
            ],
            "src": "1611:118:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:124:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1855:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1851:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1843:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1923:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:17:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1879:43:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:71:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:71:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:53",
                "type": ""
              }
            ],
            "src": "1735:222:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:79:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2063:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2075:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2065:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2065:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2065:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2029:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2054:5:53"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2036:17:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2036:24:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2026:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:35:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2019:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:43:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2016:63:53"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1999:5:53",
                "type": ""
              }
            ],
            "src": "1963:122:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2143:87:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2153:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2175:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2162:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:20:53"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2153:5:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2218:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2191:26:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:33:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2191:33:53"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2121:6:53",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2129:3:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2137:5:53",
                "type": ""
              }
            ],
            "src": "2091:139:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2302:263:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2348:83:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2350:77:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2350:79:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2350:79:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2323:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2319:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2319:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2344:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2315:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2312:119:53"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2441:117:53",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2456:15:53",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:53",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2460:6:53",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2485:63:53",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2520:9:53"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2531:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:22:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2540:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2495:20:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2495:53:53"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2485:6:53"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2272:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2283:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2295:6:53",
                "type": ""
              }
            ],
            "src": "2236:329:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2654:391:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2700:83:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2702:77:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2702:79:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2702:79:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2675:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2684:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2671:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2671:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2667:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2667:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2664:119:53"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2793:117:53",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2808:15:53",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2822:1:53",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2812:6:53",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2837:63:53",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2872:9:53"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2883:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2868:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2868:22:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2892:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2847:20:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:53:53"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2837:6:53"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2920:118:53",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2935:16:53",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2949:2:53",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2939:6:53",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2965:63:53",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3000:9:53"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3011:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2996:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2996:22:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3020:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2975:20:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2975:53:53"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2965:6:53"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2616:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2627:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2639:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2647:6:53",
                "type": ""
              }
            ],
            "src": "2571:474:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3147:73:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3164:3:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3169:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3157:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3157:19:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3157:19:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3185:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3204:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3209:4:53",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3200:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:14:53"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3185:11:53"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3119:3:53",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3124:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3135:11:53",
                "type": ""
              }
            ],
            "src": "3051:169:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3332:67:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3354:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3362:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3350:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3350:14:53"
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3366:25:53",
                        "type": "",
                        "value": "Mushroomswap: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3343:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:49:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3343:49:53"
                }
              ]
            },
            "name": "store_literal_in_memory_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3324:6:53",
                "type": ""
              }
            ],
            "src": "3226:173:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3551:220:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3561:74:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3627:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3632:2:53",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3568:58:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3568:67:53"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3561:3:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3733:3:53"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                      "nodeType": "YulIdentifier",
                      "src": "3644:88:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:93:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3644:93:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3746:19:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3757:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3762:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3753:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3753:12:53"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3746:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3539:3:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3547:3:53",
                "type": ""
              }
            ],
            "src": "3405:366:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3948:248:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3958:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3970:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3981:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3966:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3966:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3958:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4005:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4016:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4001:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4001:17:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4024:4:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4030:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4020:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4020:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3994:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3994:47:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3994:47:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4050:139:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4184:4:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4058:124:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4058:131:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4050:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3928:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3943:4:53",
                "type": ""
              }
            ],
            "src": "3777:419:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4308:114:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4330:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4338:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4326:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4326:14:53"
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a204944454e544943414c5f4144445245535345",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4342:34:53",
                        "type": "",
                        "value": "Mushroomswap: IDENTICAL_ADDRESSE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4319:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4319:58:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4319:58:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4398:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4406:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4394:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4394:15:53"
                      },
                      {
                        "hexValue": "53",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4411:3:53",
                        "type": "",
                        "value": "S"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4387:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4387:28:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4387:28:53"
                }
              ]
            },
            "name": "store_literal_in_memory_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4300:6:53",
                "type": ""
              }
            ],
            "src": "4202:220:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4574:220:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4584:74:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4650:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4655:2:53",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4591:58:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4591:67:53"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4584:3:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4756:3:53"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b",
                      "nodeType": "YulIdentifier",
                      "src": "4667:88:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4667:93:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4667:93:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4769:19:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4780:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4785:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4776:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4776:12:53"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4769:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4562:3:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4570:3:53",
                "type": ""
              }
            ],
            "src": "4428:366:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4971:248:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4981:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4993:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5004:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4989:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4989:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4981:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5028:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5039:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5024:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5024:17:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5047:4:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5053:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5043:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5043:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5017:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5017:47:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5017:47:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5073:139:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5207:4:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5081:124:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5081:131:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5073:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4951:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4966:4:53",
                "type": ""
              }
            ],
            "src": "4800:419:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5331:70:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5353:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5361:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5349:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5349:14:53"
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5365:28:53",
                        "type": "",
                        "value": "Mushroomswap: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5342:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5342:52:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5342:52:53"
                }
              ]
            },
            "name": "store_literal_in_memory_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5323:6:53",
                "type": ""
              }
            ],
            "src": "5225:176:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5553:220:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5563:74:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5629:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5634:2:53",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5570:58:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5570:67:53"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5563:3:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5735:3:53"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376",
                      "nodeType": "YulIdentifier",
                      "src": "5646:88:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5646:93:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5646:93:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5748:19:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5759:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5764:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5755:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5755:12:53"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5748:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5541:3:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5549:3:53",
                "type": ""
              }
            ],
            "src": "5407:366:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5950:248:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5960:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5972:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5983:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5968:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5968:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5960:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6007:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6018:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6003:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6003:17:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6026:4:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6032:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6022:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6022:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5996:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5996:47:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5996:47:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6052:139:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6186:4:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6060:124:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6060:131:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6052:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5930:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5945:4:53",
                "type": ""
              }
            ],
            "src": "5779:419:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6310:69:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6332:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6340:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6328:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6328:14:53"
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6344:27:53",
                        "type": "",
                        "value": "Mushroomswap: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6321:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6321:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6321:51:53"
                }
              ]
            },
            "name": "store_literal_in_memory_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6302:6:53",
                "type": ""
              }
            ],
            "src": "6204:175:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6531:220:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6541:74:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6607:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6612:2:53",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6548:58:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:67:53"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6541:3:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6713:3:53"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b",
                      "nodeType": "YulIdentifier",
                      "src": "6624:88:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6624:93:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6624:93:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6726:19:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6737:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6742:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6733:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6733:12:53"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6726:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6519:3:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6527:3:53",
                "type": ""
              }
            ],
            "src": "6385:366:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6928:248:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6938:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6950:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6961:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6946:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6946:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6938:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6985:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6996:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6981:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6981:17:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7004:4:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7010:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7000:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7000:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6974:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6974:47:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6974:47:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7030:139:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7164:4:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7038:124:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7038:131:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7030:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6908:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6923:4:53",
                "type": ""
              }
            ],
            "src": "6757:419:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7224:52:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7234:35:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7259:2:53",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7263:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "7255:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7255:14:53"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "7234:8:53"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7205:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "7215:8:53",
                "type": ""
              }
            ],
            "src": "7182:94:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7329:47:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7339:31:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7364:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "7350:13:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7350:20:53"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7339:7:53"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7311:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7321:7:53",
                "type": ""
              }
            ],
            "src": "7282:94:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7429:53:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7439:37:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7470:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7450:19:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7450:26:53"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7439:7:53"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7411:5:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7421:7:53",
                "type": ""
              }
            ],
            "src": "7382:100:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7571:74:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7588:3:53"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7631:5:53"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7613:17:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7613:24:53"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7593:19:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7593:45:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7581:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7581:58:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7581:58:53"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7559:5:53",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7566:3:53",
                "type": ""
              }
            ],
            "src": "7488:157:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7795:253:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7868:6:53"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7877:3:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7806:61:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7806:75:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7806:75:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7890:19:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7901:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7906:2:53",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7897:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7897:12:53"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7890:3:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7981:6:53"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7990:3:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7919:61:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7919:75:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7919:75:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8003:19:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8014:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8019:2:53",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8010:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8010:12:53"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8003:3:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8032:10:53",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8039:3:53"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8032:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7766:3:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7772:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7780:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7791:3:53",
                "type": ""
              }
            ],
            "src": "7651:397:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8180:206:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8190:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8202:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8213:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8198:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8198:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8190:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8270:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8283:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8294:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8279:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8279:17:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8226:43:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8226:71:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8226:71:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8351:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8364:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8375:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8360:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8360:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8307:43:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8307:72:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8307:72:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8144:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8156:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8164:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8175:4:53",
                "type": ""
              }
            ],
            "src": "8054:332:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8518:206:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8528:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8540:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8551:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8536:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8536:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8528:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8608:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8621:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8632:1:53",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8617:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8617:17:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8564:43:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8564:71:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8564:71:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8689:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8702:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8713:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8698:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8698:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8645:43:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8645:72:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8645:72:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8482:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8494:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8502:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8513:4:53",
                "type": ""
              }
            ],
            "src": "8392:332:53"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mushroomswap: FORBIDDEN\")\n\n    }\n\n    function abi_encode_t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mushroomswap: IDENTICAL_ADDRESSE\")\n\n        mstore(add(memPtr, 32), \"S\")\n\n    }\n\n    function abi_encode_t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mushroomswap: ZERO_ADDRESS\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mushroomswap: PAIR_EXISTS\")\n\n    }\n\n    function abi_encode_t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "145:1736:2:-:0;;;372:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;432:12;418:11;;:26;;;;;;;;;;;;;;;;;;372:80;145:1736;;88:117:53;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;145:1736:2:-;;;;;;;",
  "deployedSourceMap": "145:1736:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;232:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;336:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;460:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1706:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;564:978;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;267:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1550:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;205:20;;;;;;;;;;;;:::o;232:26::-;;;;;;;;;;;;;:::o;336:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;460:96::-;509:4;533:8;:15;;;;526:22;;460:96;:::o;1706:172::-;1794:11;;;;;;;;;;;1780:25;;:10;:25;;;1772:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1858:12;1844:11;;:26;;;;;;;;;;;;;;;;;;1706:172;:::o;564:978::-;634:12;677:6;667:16;;:6;:16;;;659:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;733:14;749;776:6;767:15;;:6;:15;;;:53;;805:6;813;767:53;;;786:6;794;767:53;732:88;;;;857:1;839:20;;:6;:20;;;831:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;944:1;909:37;;:7;:15;917:6;909:15;;;;;;;;;;;;;;;:23;925:6;909:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;901:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1017:21;1041:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1017:59;;1087:12;1129:6;1137;1112:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1102:43;;;;;;1087:58;;1235:4;1224:8;1218:15;1213:2;1203:8;1199:17;1196:1;1188:52;1180:60;;1279:4;1261:34;;;1296:6;1304;1261:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:4;1322:7;:15;1330:6;1322:15;;;;;;;;;;;;;;;:23;1338:6;1322:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1389:4;1363:7;:15;1371:6;1363:15;;;;;;;;;;;;;;;:23;1379:6;1363:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1449:8;1463:4;1449:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:6;1484:50;;1496:6;1484:50;;;1512:4;1518:8;:15;;;;1484:50;;;;;;;:::i;:::-;;;;;;;;648:894;;;;564:978;;;;:::o;267:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1550:148::-;1626:11;;;;;;;;;;;1612:25;;:10;:25;;;1604:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1684:6;1676:5;;:14;;;;;;;;;;;;;;;;;;1550:148;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:53:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:169::-;3135:11;3169:6;3164:3;3157:19;3209:4;3204:3;3200:14;3185:29;;3051:169;;;;:::o;3226:173::-;3366:25;3362:1;3354:6;3350:14;3343:49;3226:173;:::o;3405:366::-;3547:3;3568:67;3632:2;3627:3;3568:67;:::i;:::-;3561:74;;3644:93;3733:3;3644:93;:::i;:::-;3762:2;3757:3;3753:12;3746:19;;3405:366;;;:::o;3777:419::-;3943:4;3981:2;3970:9;3966:18;3958:26;;4030:9;4024:4;4020:20;4016:1;4005:9;4001:17;3994:47;4058:131;4184:4;4058:131;:::i;:::-;4050:139;;3777:419;;;:::o;4202:220::-;4342:34;4338:1;4330:6;4326:14;4319:58;4411:3;4406:2;4398:6;4394:15;4387:28;4202:220;:::o;4428:366::-;4570:3;4591:67;4655:2;4650:3;4591:67;:::i;:::-;4584:74;;4667:93;4756:3;4667:93;:::i;:::-;4785:2;4780:3;4776:12;4769:19;;4428:366;;;:::o;4800:419::-;4966:4;5004:2;4993:9;4989:18;4981:26;;5053:9;5047:4;5043:20;5039:1;5028:9;5024:17;5017:47;5081:131;5207:4;5081:131;:::i;:::-;5073:139;;4800:419;;;:::o;5225:176::-;5365:28;5361:1;5353:6;5349:14;5342:52;5225:176;:::o;5407:366::-;5549:3;5570:67;5634:2;5629:3;5570:67;:::i;:::-;5563:74;;5646:93;5735:3;5646:93;:::i;:::-;5764:2;5759:3;5755:12;5748:19;;5407:366;;;:::o;5779:419::-;5945:4;5983:2;5972:9;5968:18;5960:26;;6032:9;6026:4;6022:20;6018:1;6007:9;6003:17;5996:47;6060:131;6186:4;6060:131;:::i;:::-;6052:139;;5779:419;;;:::o;6204:175::-;6344:27;6340:1;6332:6;6328:14;6321:51;6204:175;:::o;6385:366::-;6527:3;6548:67;6612:2;6607:3;6548:67;:::i;:::-;6541:74;;6624:93;6713:3;6624:93;:::i;:::-;6742:2;6737:3;6733:12;6726:19;;6385:366;;;:::o;6757:419::-;6923:4;6961:2;6950:9;6946:18;6938:26;;7010:9;7004:4;7000:20;6996:1;6985:9;6981:17;6974:47;7038:131;7164:4;7038:131;:::i;:::-;7030:139;;6757:419;;;:::o;7182:94::-;7215:8;7263:5;7259:2;7255:14;7234:35;;7182:94;;;:::o;7282:::-;7321:7;7350:20;7364:5;7350:20;:::i;:::-;7339:31;;7282:94;;;:::o;7382:100::-;7421:7;7450:26;7470:5;7450:26;:::i;:::-;7439:37;;7382:100;;;:::o;7488:157::-;7593:45;7613:24;7631:5;7613:24;:::i;:::-;7593:45;:::i;:::-;7588:3;7581:58;7488:157;;:::o;7651:397::-;7791:3;7806:75;7877:3;7868:6;7806:75;:::i;:::-;7906:2;7901:3;7897:12;7890:19;;7919:75;7990:3;7981:6;7919:75;:::i;:::-;8019:2;8014:3;8010:12;8003:19;;8039:3;8032:10;;7651:397;;;;;:::o;8054:332::-;8175:4;8213:2;8202:9;8198:18;8190:26;;8226:71;8294:1;8283:9;8279:17;8270:6;8226:71;:::i;:::-;8307:72;8375:2;8364:9;8360:18;8351:6;8307:72;:::i;:::-;8054:332;;;;;:::o;8392:::-;8513:4;8551:2;8540:9;8536:18;8528:26;;8564:71;8632:1;8621:9;8617:17;8608:6;8564:71;:::i;:::-;8645:72;8713:2;8702:9;8698:18;8689:6;8645:72;:::i;:::-;8392:332;;;;;:::o",
  "source": "//SPDX-License-Identifier: MIT\r\npragma solidity =0.8.16;\r\n\r\nimport './interfaces/IMushroomswapFactory.sol';\r\nimport './MushroomswapPair.sol';\r\n\r\ncontract MushroomswapFactory is IMushroomswapFactory {\r\n    address public feeTo;\r\n    address public feeToSetter;\r\n\r\n    mapping(address => mapping(address => address)) public getPair;\r\n    address[] public allPairs;\r\n\r\n\r\n    constructor(address _feeToSetter)  {\r\n        feeToSetter = _feeToSetter;\r\n    }\r\n\r\n    function allPairsLength() external view returns (uint) {\r\n        return allPairs.length;\r\n    }\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\r\n        require(tokenA != tokenB, 'Mushroomswap: IDENTICAL_ADDRESSES');\r\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n        require(token0 != address(0), 'Mushroomswap: ZERO_ADDRESS');\r\n        require(getPair[token0][token1] == address(0), 'Mushroomswap: PAIR_EXISTS'); // single check is sufficient\r\n        bytes memory bytecode = type(MushroomswapPair).creationCode;\r\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\r\n        assembly {\r\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\r\n        }\r\n        IMushroomswapPair(pair).initialize(token0, token1);\r\n        getPair[token0][token1] = pair;\r\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\r\n        allPairs.push(pair);\r\n        emit PairCreated(token0, token1, pair, allPairs.length);\r\n    }\r\n\r\n    function setFeeTo(address _feeTo) external {\r\n        require(msg.sender == feeToSetter, 'Mushroomswap: FORBIDDEN');\r\n        feeTo = _feeTo;\r\n    }\r\n\r\n    function setFeeToSetter(address _feeToSetter) external {\r\n        require(msg.sender == feeToSetter, 'Mushroomswap: FORBIDDEN');\r\n        feeToSetter = _feeToSetter;\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\ojasm\\Documents\\Blockchain\\Internshala\\Uniswap\\Mushroomswap-core\\contracts\\MushroomswapFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/MushroomswapFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        1711
      ],
      "IMushroomswapCallee": [
        1725
      ],
      "IMushroomswapERC20": [
        1843
      ],
      "IMushroomswapFactory": [
        1906
      ],
      "IMushroomswapPair": [
        2036
      ],
      "Math": [
        2156
      ],
      "MushroomswapERC20": [
        380
      ],
      "MushroomswapFactory": [
        567
      ],
      "MushroomswapPair": [
        1607
      ],
      "UQ112x112": [
        2275
      ]
    },
    "id": 568,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 382,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IMushroomswapFactory.sol",
        "file": "./interfaces/IMushroomswapFactory.sol",
        "id": 383,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 568,
        "sourceUnit": 1907,
        "src": "60:47:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MushroomswapPair.sol",
        "file": "./MushroomswapPair.sol",
        "id": 384,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 568,
        "sourceUnit": 1608,
        "src": "109:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 385,
              "name": "IMushroomswapFactory",
              "nameLocations": [
                "177:20:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1906,
              "src": "177:20:2"
            },
            "id": 386,
            "nodeType": "InheritanceSpecifier",
            "src": "177:20:2"
          }
        ],
        "canonicalName": "MushroomswapFactory",
        "contractDependencies": [
          1607
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 567,
        "linearizedBaseContracts": [
          567,
          1906
        ],
        "name": "MushroomswapFactory",
        "nameLocation": "154:19:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1860
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 388,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "220:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "205:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 387,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1865
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 390,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "247:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "232:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "232:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1874
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 396,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "322:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "267:62:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 395,
              "keyType": {
                "id": 391,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "267:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 394,
                "keyType": {
                  "id": 392,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "286:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 393,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1881
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 399,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "353:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "336:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "336:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 398,
              "nodeType": "ArrayTypeName",
              "src": "336:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "407:45:2",
              "statements": [
                {
                  "expression": {
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 404,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "418:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 405,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "432:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "418:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "418:26:2"
                }
              ]
            },
            "id": 409,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "392:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "384:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "383:22:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:0:2"
            },
            "scope": 567,
            "src": "372:80:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1886
            ],
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "515:41:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 414,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "533:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "542:6:2",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "533:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 413,
                  "id": 416,
                  "nodeType": "Return",
                  "src": "526:22:2"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "469:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:2"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "509:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:6:2"
            },
            "scope": 567,
            "src": "460:96:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1895
            ],
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "648:894:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 428,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "667:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 429,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "677:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "667:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a204944454e544943414c5f414444524553534553",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "685:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b",
                          "typeString": "literal_string \"Mushroomswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Mushroomswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b",
                          "typeString": "literal_string \"Mushroomswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "659:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "659:62:2"
                },
                {
                  "assignments": [
                    435,
                    437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "741:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "733:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "733:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 437,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "757:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "749:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 436,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "749:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 438,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "767:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 439,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "776:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "767:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 444,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 445,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "813:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 446,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "804:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "767:53:2",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 441,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "786:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 442,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "794:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 443,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "785:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "732:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 450,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "839:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "857:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "849:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 451,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "849:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "849:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "839:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a205a45524f5f41444452455353",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "861:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376",
                          "typeString": "literal_string \"Mushroomswap: ZERO_ADDRESS\""
                        },
                        "value": "Mushroomswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376",
                          "typeString": "literal_string \"Mushroomswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "831:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "831:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 460,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "909:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 462,
                            "indexExpression": {
                              "id": 461,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "917:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "909:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 464,
                          "indexExpression": {
                            "id": 463,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "925:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "909:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "944:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "936:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 465,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "936:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "909:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a20504149525f455849535453",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "948:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b",
                          "typeString": "literal_string \"Mushroomswap: PAIR_EXISTS\""
                        },
                        "value": "Mushroomswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b",
                          "typeString": "literal_string \"Mushroomswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "901:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:75:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "901:75:2"
                },
                {
                  "assignments": [
                    474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 474,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1030:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "1017:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1017:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 479,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 476,
                          "name": "MushroomswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1607,
                          "src": "1046:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MushroomswapPair_$1607_$",
                            "typeString": "type(contract MushroomswapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_MushroomswapPair_$1607_$",
                            "typeString": "type(contract MushroomswapPair)"
                          }
                        ],
                        "id": 475,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1041:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1041:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_MushroomswapPair_$1607",
                        "typeString": "type(contract MushroomswapPair)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1064:12:2",
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1041:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1017:59:2"
                },
                {
                  "assignments": [
                    481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 481,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1095:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "1087:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 480,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1087:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 485,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "1129:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 486,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "1137:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 483,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1112:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1116:12:2",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1112:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1112:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 482,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1102:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1087:58:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1165:86:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1180:60:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1196:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1203:8:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1213:2:2",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1199:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1199:17:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1224:8:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1218:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1218:15:2"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1235:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1188:7:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1188:52:2"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1180:4:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 474,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1203:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 474,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1224:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 425,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1180:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 481,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1235:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 490,
                  "nodeType": "InlineAssembly",
                  "src": "1156:95:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 495,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1296:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 496,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1304:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 492,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "1279:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 491,
                          "name": "IMushroomswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2036,
                          "src": "1261:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMushroomswapPair_$2036_$",
                            "typeString": "type(contract IMushroomswapPair)"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1261:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMushroomswapPair_$2036",
                          "typeString": "contract IMushroomswapPair"
                        }
                      },
                      "id": 494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1285:10:2",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2035,
                      "src": "1261:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1261:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:50:2"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 499,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "1322:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 502,
                        "indexExpression": {
                          "id": 500,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "1330:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1322:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 503,
                      "indexExpression": {
                        "id": 501,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1338:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1322:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 504,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "1348:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1322:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:30:2"
                },
                {
                  "expression": {
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 507,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "1363:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 510,
                        "indexExpression": {
                          "id": 508,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 437,
                          "src": "1371:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1363:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "id": 509,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1379:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1363:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 512,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "1389:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1363:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 518,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "1463:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 515,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "1449:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1458:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1449:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1449:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "1449:19:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 522,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1496:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 523,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1504:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 524,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "1512:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 525,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "1518:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1527:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1518:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 521,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "1484:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "EmitStatement",
                  "src": "1479:55:2"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "573:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "592:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "584:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "608:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "600:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:32:2"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "642:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "634:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "633:14:2"
            },
            "scope": 567,
            "src": "564:978:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1900
            ],
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "1593:105:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 536,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1612:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1616:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1612:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 538,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "1626:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1612:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a20464f5242494444454e",
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1639:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                          "typeString": "literal_string \"Mushroomswap: FORBIDDEN\""
                        },
                        "value": "Mushroomswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                          "typeString": "literal_string \"Mushroomswap: FORBIDDEN\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1604:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:61:2"
                },
                {
                  "expression": {
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 543,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "1676:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 544,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "1684:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1676:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:14:2"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1559:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1576:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "1568:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1567:16:2"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:2"
            },
            "scope": 567,
            "src": "1550:148:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1905
            ],
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "1761:117:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 554,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1780:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1784:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1780:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 556,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "1794:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1780:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a20464f5242494444454e",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                          "typeString": "literal_string \"Mushroomswap: FORBIDDEN\""
                        },
                        "value": "Mushroomswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                          "typeString": "literal_string \"Mushroomswap: FORBIDDEN\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1772:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:61:2"
                },
                {
                  "expression": {
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 561,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "1844:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 562,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "1858:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1844:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:26:2"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1715:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1738:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "1730:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1729:22:2"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:0:2"
            },
            "scope": 567,
            "src": "1706:172:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 568,
        "src": "145:1736:2",
        "usedErrors": []
      }
    ],
    "src": "32:1849:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/MushroomswapFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        1711
      ],
      "IMushroomswapCallee": [
        1725
      ],
      "IMushroomswapERC20": [
        1843
      ],
      "IMushroomswapFactory": [
        1906
      ],
      "IMushroomswapPair": [
        2036
      ],
      "Math": [
        2156
      ],
      "MushroomswapERC20": [
        380
      ],
      "MushroomswapFactory": [
        567
      ],
      "MushroomswapPair": [
        1607
      ],
      "UQ112x112": [
        2275
      ]
    },
    "id": 568,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 382,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IMushroomswapFactory.sol",
        "file": "./interfaces/IMushroomswapFactory.sol",
        "id": 383,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 568,
        "sourceUnit": 1907,
        "src": "60:47:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MushroomswapPair.sol",
        "file": "./MushroomswapPair.sol",
        "id": 384,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 568,
        "sourceUnit": 1608,
        "src": "109:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 385,
              "name": "IMushroomswapFactory",
              "nameLocations": [
                "177:20:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1906,
              "src": "177:20:2"
            },
            "id": 386,
            "nodeType": "InheritanceSpecifier",
            "src": "177:20:2"
          }
        ],
        "canonicalName": "MushroomswapFactory",
        "contractDependencies": [
          1607
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 567,
        "linearizedBaseContracts": [
          567,
          1906
        ],
        "name": "MushroomswapFactory",
        "nameLocation": "154:19:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1860
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 388,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "220:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "205:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 387,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1865
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 390,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "247:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "232:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 389,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "232:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1874
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 396,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "322:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "267:62:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 395,
              "keyType": {
                "id": 391,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "267:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 394,
                "keyType": {
                  "id": 392,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "286:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 393,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1881
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 399,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "353:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 567,
            "src": "336:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 397,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "336:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 398,
              "nodeType": "ArrayTypeName",
              "src": "336:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "407:45:2",
              "statements": [
                {
                  "expression": {
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 404,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "418:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 405,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "432:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "418:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "418:26:2"
                }
              ]
            },
            "id": 409,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "392:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "384:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "383:22:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:0:2"
            },
            "scope": 567,
            "src": "372:80:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1886
            ],
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "515:41:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 414,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "533:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "542:6:2",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "533:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 413,
                  "id": 416,
                  "nodeType": "Return",
                  "src": "526:22:2"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "469:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:2"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "509:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:6:2"
            },
            "scope": 567,
            "src": "460:96:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1895
            ],
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "648:894:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 428,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "667:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 429,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "677:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "667:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a204944454e544943414c5f414444524553534553",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "685:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b",
                          "typeString": "literal_string \"Mushroomswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Mushroomswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_635d7f3cb3d6e2410737bd311d72b2e505f3084b266a6a1f5d9e36360353638b",
                          "typeString": "literal_string \"Mushroomswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "659:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "659:62:2"
                },
                {
                  "assignments": [
                    435,
                    437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "741:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "733:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "733:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 437,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "757:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "749:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 436,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "749:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 438,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "767:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 439,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "776:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "767:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 444,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 445,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "813:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 446,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "804:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "767:53:2",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 441,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "786:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 442,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "794:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 443,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "785:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "732:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 450,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "839:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "857:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "849:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 451,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "849:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "849:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "839:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a205a45524f5f41444452455353",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "861:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376",
                          "typeString": "literal_string \"Mushroomswap: ZERO_ADDRESS\""
                        },
                        "value": "Mushroomswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb2c6682cf497044de159984420f87e494b7b33d6c4ebd8fcb3fdd1b8ed87376",
                          "typeString": "literal_string \"Mushroomswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "831:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "831:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 460,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "909:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 462,
                            "indexExpression": {
                              "id": 461,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "917:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "909:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 464,
                          "indexExpression": {
                            "id": 463,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "925:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "909:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "944:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "936:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 465,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "936:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "909:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a20504149525f455849535453",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "948:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b",
                          "typeString": "literal_string \"Mushroomswap: PAIR_EXISTS\""
                        },
                        "value": "Mushroomswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09f8d90e3d4b93cc03d3f4eb21722bb785cf38f99c2a2dbbf8ebf2b91f15c56b",
                          "typeString": "literal_string \"Mushroomswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "901:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:75:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "901:75:2"
                },
                {
                  "assignments": [
                    474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 474,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1030:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "1017:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1017:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 479,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 476,
                          "name": "MushroomswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1607,
                          "src": "1046:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MushroomswapPair_$1607_$",
                            "typeString": "type(contract MushroomswapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_MushroomswapPair_$1607_$",
                            "typeString": "type(contract MushroomswapPair)"
                          }
                        ],
                        "id": 475,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1041:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1041:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_MushroomswapPair_$1607",
                        "typeString": "type(contract MushroomswapPair)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1064:12:2",
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1041:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1017:59:2"
                },
                {
                  "assignments": [
                    481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 481,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1095:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "1087:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 480,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1087:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 485,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "1129:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 486,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "1137:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 483,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1112:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1116:12:2",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1112:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1112:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 482,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1102:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1087:58:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1165:86:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1180:60:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1196:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1203:8:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1213:2:2",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1199:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1199:17:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1224:8:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1218:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1218:15:2"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1235:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1188:7:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1188:52:2"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1180:4:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 474,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1203:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 474,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1224:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 425,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1180:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 481,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1235:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 490,
                  "nodeType": "InlineAssembly",
                  "src": "1156:95:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 495,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1296:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 496,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1304:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 492,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "1279:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 491,
                          "name": "IMushroomswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2036,
                          "src": "1261:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMushroomswapPair_$2036_$",
                            "typeString": "type(contract IMushroomswapPair)"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1261:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMushroomswapPair_$2036",
                          "typeString": "contract IMushroomswapPair"
                        }
                      },
                      "id": 494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1285:10:2",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2035,
                      "src": "1261:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1261:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:50:2"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 499,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "1322:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 502,
                        "indexExpression": {
                          "id": 500,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "1330:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1322:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 503,
                      "indexExpression": {
                        "id": 501,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1338:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1322:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 504,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "1348:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1322:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:30:2"
                },
                {
                  "expression": {
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 507,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "1363:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 510,
                        "indexExpression": {
                          "id": 508,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 437,
                          "src": "1371:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1363:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 511,
                      "indexExpression": {
                        "id": 509,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1379:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1363:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 512,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "1389:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1363:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 518,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "1463:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 515,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "1449:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1458:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1449:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1449:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "1449:19:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 522,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1496:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 523,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "1504:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 524,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "1512:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 525,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "1518:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1527:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1518:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 521,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1855,
                      "src": "1484:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1484:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "EmitStatement",
                  "src": "1479:55:2"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "573:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "592:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "584:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "608:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "600:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:32:2"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "642:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "634:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "633:14:2"
            },
            "scope": 567,
            "src": "564:978:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1900
            ],
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "1593:105:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 536,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1612:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1616:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1612:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 538,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "1626:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1612:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a20464f5242494444454e",
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1639:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                          "typeString": "literal_string \"Mushroomswap: FORBIDDEN\""
                        },
                        "value": "Mushroomswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                          "typeString": "literal_string \"Mushroomswap: FORBIDDEN\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1604:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:61:2"
                },
                {
                  "expression": {
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 543,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "1676:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 544,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "1684:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1676:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:14:2"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1559:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1576:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "1568:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1567:16:2"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:2"
            },
            "scope": 567,
            "src": "1550:148:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1905
            ],
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "1761:117:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 554,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1780:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1784:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1780:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 556,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "1794:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1780:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757368726f6f6d737761703a20464f5242494444454e",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                          "typeString": "literal_string \"Mushroomswap: FORBIDDEN\""
                        },
                        "value": "Mushroomswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22282e5e13e4e193a324bc28e3bf232c6598923fe097e78d9eda7bce13f22d51",
                          "typeString": "literal_string \"Mushroomswap: FORBIDDEN\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1772:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:61:2"
                },
                {
                  "expression": {
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 561,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "1844:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 562,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "1858:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1844:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:26:2"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1715:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1738:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "1730:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1729:22:2"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:0:2"
            },
            "scope": 567,
            "src": "1706:172:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 568,
        "src": "145:1736:2",
        "usedErrors": []
      }
    ],
    "src": "32:1849:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-08-12T21:33:47.602Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}